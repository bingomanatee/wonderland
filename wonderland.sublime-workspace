{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"cu",
				"customCode"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "wonderlandApp.controller('StoryEditCtrl', ['$scope',  '$window', '$modal', '$resource', \n  'uiGridConstants',  'Stories', 'StoryPages', 'StoryJumps', 'filterCode',\n  function ($scope, $window, $modal,  $resource,\n    uiGridConstants, Stories, StoryPages, StoryJumps, filterCode) {\n\n    function _loadPages() {\n      if ($scope.id)  $scope.pages = StoryPages.forStory({id: $scope.id});\n    }\n\n    function _loadStory(){\n      if ($scope.id)   $scope.story = Stories.get({id: $scope.id});\n    }\n\n    function _sendPage() {\n      var data = $scope.newPage;\n      data.story = $scope.id;\n      StoryPages.save(data, function(result){\n        var saves = $scope.jumps.length;\n        var sent = false;\n        var savedJumps = [];\n        function _onSave(data){\n          savedJumps.push(data);\n          if (sent) return;\n          if (--saves == 0 ){\n           {\n             $scope.alerts.push({type: 'success', msg: 'All Jumps Saved'});\n             sent = true;\n             StoryJumps.observer.broadcast(savedJumps, 'new');\n           }\n         }\n       }\n\n       if (result.id){\n        console.log('story page saved; saving jumps', result);\n        angular.forEach($scope.jumps, function(jump){\n          jump.story = result.id;\n          StoryJumps.save(jump, _onSave);\n        });\n        $scope.jumps = [];\n        $scope.newPage = {title: '', body: '', story: result.id};\n        $scope.alerts.push({type: 'success', msg: 'Saved story page'});\n      } else {\n        $scope.alerts.push({type: 'danger', msg: 'Failed to save story page'});\n      }\n    });\n\n    }\n\n    $scope.jumps = [];\n    $scope.state = {showFullPage: false};\n    $scope.isCollapsed = true;\n    $scope.newPage = {title: '', body: ''};\n    $scope.id = 0;\n\n\n    $scope.init = function (id) {\n      $scope.id = id;\n      _loadStory();\n      _loadPages();\n    };\n\n    $scope.addJump = function () {\n      var dlg = $modal.open({\n        templateUrl: '/wonderland/templates/dialogs/newJump.html',\n        controller: 'NewJumpCtrl',\n        size: 'lg'\n      }).result.then(function (newJump) {\n        console.log('recieved newJump ', newJump);\n        $scope.jumps.push(newJump);\n      })\n    };\n\n    $scope.alerts = [];\n    $scope.closeAlert = function (index) {\n      $scope.alerts.splice(index, 1);\n    };\n\n    $scope.sendPage = function () {\n      _sendPage();\n    };\n\n    $scope.$watch('pages', function (value) {\n      console.log('vaue of pages: ', value);\n    });\n\n    $scope.$watch('state.showFullPage', function (v) {\n      console.log('sfp = ', v);\n    });\n\n    $scope.toggleSFP = function () {\n      if (!$scope.state.hasOwnProperty('showFullPage')) {\n        $scope.state.showFullPage = false;\n      }\n      $scope.state.showFullPage = !$scope.state.showFullPage;\n    };\n\n    $scope.isShowingFullPage = function () {\n      return $scope.state.showFullPage;\n    };\n\n    // ----------- Code/ custom code management\n\n   // $scope.customCode = false; // whether the user is customizing the code, in which case the code is not updated by reflecting title\n    $scope.codeSuggestion = ''; // an alternative to the current code\n    $scope.codeIsUnique = true;\n\n    $scope.userCodeChange = function(value){\n      console.log('user code change: ', value);\n      $scope.newPage.customCode = true;\n    }\n\n    $scope.showCodeSuggestion = function(){\n      if (!$scope.newPage.code) return false;\n      return !$scope.codeIsUnique;\n    };\n\n    function _codeCheck(result){   \n      $scope.codeIsUnique = (result.code == $scope.newPage.code);         \n      $scope.codeSuggestion = result.hasOwnProperty('code') ? result.code : '';\n    }\n\n    $scope.$watch('newPage.title', function (title) {\n      if (title && !$scope.newPage.customCode){\n        $scope.newPage.code = filterCode(title);\n      }\n    });\n\n//@TODO: insulate against cascading changes\n$scope.$watch('newPage.code', function(code){\n  if (code){\n    StoryPages.uniqueCode({story: $scope.id, code: code}, _codeCheck);\n  }\n});\n\n$scope.$watch('newPage.customCode', function(cc){\n       // console.log('customCode updated to ', cc);\n       if (!cc){\n        $scope.newPage.code = filterCode($scope.newPage.title);\n      }\n    });\n\n$scope.useUniqueCode = function(){\n  $scope.newPage.code = $scope.codeSuggestion;\n  $scope.newPage.customCode = true;\n}\n\n    // ---------- footer errors\n\n    $scope.newPageErrors = function (){\n      var errors = [];\n      if (!($scope.newPage.title && $scope.newPage.title.length > 7)){\n        errors.push('Your new page needs a title at least 8 characters long');\n      }\n      if (!($scope.newPage.body && $scope.newPage.body.length> 20)){\n        errors.push('Your new page needs a body at least 20 characters long');\n      }\n\n      if (!($scope.newPage.code)){\n        errors.push('Your new page needs a code');\n      } else if (!($scope.codeIsUnique)){\n        errors.push('Your new page code must be unique within the scope of the story');\n      }\n\n      return errors;\n    };\n\n    $scope.newPageHasErrors = function(){\n      return $scope.newPageErrors().length;\n    }\n\n    $scope.newPageStatusMessage = function(){\n      var err = _newPageErrors();\n      var text = '';\n      if (err.length){\n        text = _unmetReqTemplates({errors: err});\n      } else if ($scope.jumps.length == 0){\n        text =  '<div class=\"alert alert-info\">You can save this page; however there are no exit jumps from the page</div>'\n      } else text = '<div class=\"info\">Your page is ready to save</div>';\n\n      return text;\n    };\n\n\n    $scope.$watch('newPage.body', function (b) {\n      try {\n        $scope.newPage.body_marked = marked(b);\n      } catch (err) {\n        console.log('problem marking up ', b, ': ', $scope.newPage.body_marked);\n      }\n    });\n\n// -------------- Dynamic style for full page version\n\nfunction _mainStyle() {\n  var out = {height: $window.innerHeight - 120};\n   //   console.log('setting main style to ', out);\n   return out;\n }\n\n $scope.mainStyle = _mainStyle();\n $scope.cellStyle = _mainStyle();\n function _resize() {\n  $scope.mainStyle = _mainStyle();\n  $scope.cellStyle = _.extend(_mainStyle(), {});\n  $scope.$apply();\n}\n\nif ($window.attachEvent) {\n  $window.attachEvent('onresize', _resize);\n}\nelse if ($window.addEventListener) {\n  $window.addEventListener('resize', _resize, true);\n}\nelse {\n      //The browser does not support Javascript event binding\n    }\n\n  }]) // end controller\n.controller('NewJumpCtrl', ['$scope', '$modalInstance', function ($scope, $modalInstance) {\n\n  $scope.ok = function () {\n    console.log('sending newJump ', $scope.newJump);\n    $modalInstance.close($scope.newJump);\n  };\n\n  $scope.cancel = function () {\n    $modalInstance.dismiss('cancel');\n  };\n\n  $scope.newJump = {prompt: '', toPageCode: ''};\n}]);\n",
			"file": "assets/wonderland/storyEdit.js",
			"file_size": 6819,
			"file_write_time": 130693688370000000,
			"settings":
			{
				"buffer_size": 6727,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tests/karma/newpagetest.js",
			"settings":
			{
				"buffer_size": 14,
				"line_ending": "Unix",
				"name": "newpagetest.js"
			}
		},
		{
			"file": "assets/wonderland/app/models.js",
			"settings":
			{
				"buffer_size": 4525,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: List Packages"
			]
		],
		"width": 530.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/dave/Documents/repos/wonderland",
		"/Users/dave/Documents/repos/wonderland/api/controllers",
		"/Users/dave/Documents/repos/wonderland/assets/wonderland",
		"/Users/dave/Documents/repos/wonderland/assets/wonderland/app",
		"/Users/dave/Documents/repos/wonderland/tests",
		"/Users/dave/Documents/repos/wonderland/tests/karma",
		"/Users/dave/Documents/repos/wonderland/views/form",
		"/Users/dave/Documents/repos/wonderland/views/story"
	],
	"file_history":
	[
		"/Users/dave/Documents/repos/wonderland/tasks/pipeline.js",
		"/Users/dave/Documents/repos/wonderland/views/layout.ejs",
		"/Users/dave/Documents/repos/wonderland/views/story/edit.ejs",
		"/Users/dave/Documents/repos/wonderland/views/story/newPageForm.ejs",
		"/Users/dave/Documents/repos/wonderland/assets/wonderland/newStoryForm.js",
		"/Users/dave/Documents/repos/wonderland/assets/wonderland/app/form.js",
		"/Users/dave/Documents/repos/wonderland/assets/wonderland/app/app.js",
		"/Users/dave/Documents/repos/wonderland/assets/wonderland/app/models.js",
		"/Users/dave/Documents/repos/wonderland/assets/wonderland/templates/dialogs/newJump.html",
		"/Users/dave/Documents/repos/wonderland/assets/styles/app.scss",
		"/Users/dave/Documents/repos/wonderland/assets/wonderland/form.js",
		"/Users/dave/Documents/repos/wonderland/views/form/genericFormErrors.ejs",
		"/Users/dave/Documents/repos/wonderland/assets/wonderland/app.js",
		"/Users/dave/Documents/repos/wonderland/tasks/config/copy.js",
		"/Users/dave/Documents/repos/wonderland/Gruntfile.js",
		"/Users/dave/Documents/repos/wonderland/.tmp/public/wonderland/storyEdit.js",
		"/Users/dave/Documents/repos/wonderland/tasks/config/sass.js",
		"/Users/dave/Documents/repos/wonderland/api/models/StoryPages.js",
		"/Users/dave/Documents/repos/wonderland/assets/wonderland/storyEdit.js",
		"/Users/dave/Documents/repos/wonderland/package.json",
		"/Users/dave/Documents/repos/wonderland/node_modules/lodash/array/pullAt.js",
		"/Users/dave/Documents/repos/wonderland/config/connections.js",
		"/Users/dave/Documents/repos/wonderland/homeFamous/node_modules/grunt-jscs/node_modules/jscs/lib/rules/safe-context-keyword.js",
		"/Users/dave/Documents/repos/wonderland/assets/js/dependencies/sails.io.js",
		"/Users/dave/Documents/repos/wonderland/tasks/config/sync.js"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/dave/Documents/repos/wonderland/tasks"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"$scope.pages",
			"_loadPages",
			"pages =",
			"jumps =",
			"_normalizeIds",
			"Stories",
			"stories",
			"Stories",
			"stories",
			"_ids",
			"StoryObserver",
			"newPageForm",
			"_sendPage",
			"useUniqueCode",
			"$scope.customCode",
			"useCusomCode",
			"scss",
			"_newPageeErrorTemplate"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"StoryObserver",
			"$scope.newPage.customCode",
			"_newPageeErrorTemplate"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "assets/wonderland/storyEdit.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6727,
						"regions":
						{
						},
						"selection":
						[
							[
								2168,
								2168
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 644.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "tests/karma/newpagetest.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14,
						"regions":
						{
						},
						"selection":
						[
							[
								14,
								14
							]
						],
						"settings":
						{
							"auto_name": "newpagetest.js",
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "assets/wonderland/app/models.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4525,
						"regions":
						{
						},
						"selection":
						[
							[
								4074,
								4074
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1349.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "wonderland.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 309.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
