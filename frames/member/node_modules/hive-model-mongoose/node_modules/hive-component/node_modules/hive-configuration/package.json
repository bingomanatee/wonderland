{
  "author": {
    "name": "Dave Edelhart"
  },
  "name": "hive-configuration",
  "description": "Simple light-weight configuration and setting module extending EventEmitter; branched from configuration (Thomas Fritz <fritztho@gmail.com>)",
  "version": "0.0.1",
  "homepage": "https://github.com/thomasfr/node-configuration",
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/thomasfr/node-configuration.git"
  },
  "dependencies": {
    "underscore": "~1.3.3"
  },
  "engines": {
    "node": ">=0.6.x"
  },
  "devDependencies": {
    "mocha": "latest",
    "should": "latest",
    "tap": "latest"
  },
  "optionalDependencies": {},
  "keywords": [
    "hive",
    "configuration",
    "config",
    "setup",
    "configure",
    "settings"
  ],
  "readme": "[![build status](https://secure.travis-ci.org/thomasfr/node-configuration.png)](http://travis-ci.org/thomasfr/node-configuration)\nConfiguration\n=============\n\nLight-Weight module for node.js to help you to configure your node.js module(s) or\nadminister your settings.\n\n this branch of configuration has a small but significant difference: setting object or array values\nto a field with existing values of the same type will produce in a union of the data. See `test/tap_test.js` for details of usage.\nInstallation\n============\n\n```\nnpm install hive-configuration\n```\n\nUsage\n=====\n\n```\nvar Configuration = require('Configuration');\n\nvar defaultConfig = {\n    host: \"localhost\",\n    port: 1234\n};\nvar config = new Configuration(defaultConfig);\n\nconfig.on('change', function(key, value) {\n    console.log(\"value of '\" + key + \"' has changed to '\" + value + \"'\");\n});\n\n// This also works for 'add' and 'remove' events.\nconfig.on('change:host', function(newValue) {\n    console.log(\"config key 'host' was changed to '\" + newValue + \"');\n});\n\nconfig.on('set', function(key, value) {\n    console.log(\"new config '\" + key + \"' added. Value: '\" + value + \"'\");\n});\n\nconfig.on('remove', function(key) {\n    console.log(\"config with '\" + key + \"' gets removed\");\n});\n\n\nconfig.set(\"host\", \"192.168.0.1\");\nconfig.set(\"featureFoo\", true);\n\nconsole.log(\"has featureFoo? \", config.has(\"featureFoo\");\n\n// Resets its internal values to the default values given at creation @see: defaultConfig\nconfig.reset();\n\n// will output 'localhost' and not '192.168.0.1'\nconsole.log(config.get(\"host\"));\n\n// Removes all config values. Even default values.\nconfig.removeAll();\n\n// Will output true after removeAll() otherwise false ;)\nconsole.log(config.isEmpty());\n\n\n```\n\nLICENSE\n=======\n\nCopyright (c) 2012 Thomas Fritz\n\nThe MIT License\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "_id": "hive-configuration@0.0.1",
  "_from": "hive-configuration@>=0.0.1b"
}
